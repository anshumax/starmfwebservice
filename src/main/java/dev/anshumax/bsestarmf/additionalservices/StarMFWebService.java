package dev.anshumax.bsestarmf.additionalservices;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-03-25T10:31:09.734+05:30
 * Generated source version: 3.2.7
 *
 */
@WebServiceClient(name = "StarMFWebService",
                  wsdlLocation = "https://www.bsestarmf.in/StarMFWebService/StarMFWebService.svc?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class StarMFWebService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://tempuri.org/", "StarMFWebService");
    public final static QName WSHttpBindingIStarMFWebService1 = new QName("http://tempuri.org/", "WSHttpBinding_IStarMFWebService1");
    public final static QName WSHttpBindingIStarMFWebService = new QName("http://tempuri.org/", "WSHttpBinding_IStarMFWebService");
    static {
        URL url = null;
        try {
            url = new URL("https://www.bsestarmf.in/StarMFWebService/StarMFWebService.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(StarMFWebService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "https://www.bsestarmf.in/StarMFWebService/StarMFWebService.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public StarMFWebService(String url) throws MalformedURLException {
    	super(new URL(url + "/StarMFWebService/StarMFWebService.svc?wsdl"), SERVICE);
    }
    public StarMFWebService(URL wsdlLocation) {
    	
        super(wsdlLocation, SERVICE);
    }

    public StarMFWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StarMFWebService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public StarMFWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public StarMFWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public StarMFWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns IStarMFWebService
     */
    @WebEndpoint(name = "WSHttpBinding_IStarMFWebService1")
    public IStarMFWebService getWSHttpBindingIStarMFWebService1() {
        return super.getPort(WSHttpBindingIStarMFWebService1, IStarMFWebService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IStarMFWebService
     */
    @WebEndpoint(name = "WSHttpBinding_IStarMFWebService1")
    public IStarMFWebService getWSHttpBindingIStarMFWebService1(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIStarMFWebService1, IStarMFWebService.class, features);
    }


    /**
     *
     * @return
     *     returns IStarMFWebService
     */
    @WebEndpoint(name = "WSHttpBinding_IStarMFWebService")
    public IStarMFWebService getWSHttpBindingIStarMFWebService() {
        return super.getPort(WSHttpBindingIStarMFWebService, IStarMFWebService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IStarMFWebService
     */
    @WebEndpoint(name = "WSHttpBinding_IStarMFWebService")
    public IStarMFWebService getWSHttpBindingIStarMFWebService(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIStarMFWebService, IStarMFWebService.class, features);
    }

}
