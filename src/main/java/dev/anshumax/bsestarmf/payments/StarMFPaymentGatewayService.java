package dev.anshumax.bsestarmf.payments;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2020-03-03T11:20:30.904+05:30
 * Generated source version: 3.2.7
 *
 */
@WebServiceClient(name = "StarMFPaymentGatewayService",
                  wsdlLocation = "http://bsestarmf.in/StarMFPaymentGatewayService/StarMFPaymentGatewayService.svc?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class StarMFPaymentGatewayService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "StarMFPaymentGatewayService");
    public final static QName WSHttpBindingIStarMFPaymentGatewayService = new QName("http://tempuri.org/", "WSHttpBinding_IStarMFPaymentGatewayService");
    public final static QName WSHttpBindingIStarMFPaymentGatewayService1 = new QName("http://tempuri.org/", "WSHttpBinding_IStarMFPaymentGatewayService1");
    static {
        URL url = null;
        try {
            url = new URL("http://bsestarmf.in/StarMFPaymentGatewayService/StarMFPaymentGatewayService.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(StarMFPaymentGatewayService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://bsestarmf.in/StarMFPaymentGatewayService/StarMFPaymentGatewayService.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public StarMFPaymentGatewayService(String url) throws MalformedURLException {
    	super(new URL(url + "/StarMFPaymentGatewayService/StarMFPaymentGatewayService.svc?wsdl"), SERVICE);
    	
    }
    
    public StarMFPaymentGatewayService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public StarMFPaymentGatewayService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StarMFPaymentGatewayService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public StarMFPaymentGatewayService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public StarMFPaymentGatewayService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public StarMFPaymentGatewayService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns IStarMFPaymentGatewayService
     */
    @WebEndpoint(name = "WSHttpBinding_IStarMFPaymentGatewayService")
    public IStarMFPaymentGatewayService getWSHttpBindingIStarMFPaymentGatewayService() {
        return super.getPort(WSHttpBindingIStarMFPaymentGatewayService, IStarMFPaymentGatewayService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IStarMFPaymentGatewayService
     */
    @WebEndpoint(name = "WSHttpBinding_IStarMFPaymentGatewayService")
    public IStarMFPaymentGatewayService getWSHttpBindingIStarMFPaymentGatewayService(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIStarMFPaymentGatewayService, IStarMFPaymentGatewayService.class, features);
    }


    /**
     *
     * @return
     *     returns IStarMFPaymentGatewayService
     */
    @WebEndpoint(name = "WSHttpBinding_IStarMFPaymentGatewayService1")
    public IStarMFPaymentGatewayService getWSHttpBindingIStarMFPaymentGatewayService1() {
        return super.getPort(WSHttpBindingIStarMFPaymentGatewayService1, IStarMFPaymentGatewayService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IStarMFPaymentGatewayService
     */
    @WebEndpoint(name = "WSHttpBinding_IStarMFPaymentGatewayService1")
    public IStarMFPaymentGatewayService getWSHttpBindingIStarMFPaymentGatewayService1(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIStarMFPaymentGatewayService1, IStarMFPaymentGatewayService.class, features);
    }

}
